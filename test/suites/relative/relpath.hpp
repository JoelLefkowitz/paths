#ifndef PATHS_SUITES_RELATIVE_RELPATH_HPP
#define PATHS_SUITES_RELATIVE_RELPATH_HPP

#include <string>
#include <vector>

struct RelpathTestCase {
    std::string source;
    std::string target;
    std::string expected;
};

const std::vector<RelpathTestCase> cases = {
    {".",   ".",     "."          },
    {".",   "..",    ".."         },
    {".",   "a",     "a"          },
    {".",   "./",    "."          },
    {".",   "./.",   "."          },
    {".",   "./..",  ".."         },
    {".",   "./a",   "a"          },
    {".",   "../",   ".."         },
    {".",   "../.",  ".."         },
    {".",   "../..", "../.."      },
    {".",   "../a",  "../a"       },
    {".",   "a/",    "a"          },
    {".",   "a/.",   "a"          },
    {".",   "a/..",  "."          },
    {".",   "a/b",   "a/b"        },
    {"a",   ".",     ".."         },
    {"a",   "..",    "../.."      },
    {"a",   "a",     "."          },
    {"a",   "./",    ".."         },
    {"a",   "./.",   ".."         },
    {"a",   "./..",  "../.."      },
    {"a",   "./a",   "."          },
    {"a",   "../",   "../.."      },
    {"a",   "../.",  "../.."      },
    {"a",   "../..", "../../.."   },
    {"a",   "../a",  "../../a"    },
    {"a",   "a/",    "."          },
    {"a",   "a/.",   "."          },
    {"a",   "a/..",  ".."         },
    {"a",   "a/b",   "b"          },
    {"./",  ".",     "."          },
    {"./",  "..",    ".."         },
    {"./",  "a",     "a"          },
    {"./",  "./",    "."          },
    {"./",  "./.",   "."          },
    {"./",  "./..",  ".."         },
    {"./",  "./a",   "a"          },
    {"./",  "../",   ".."         },
    {"./",  "../.",  ".."         },
    {"./",  "../..", "../.."      },
    {"./",  "../a",  "../a"       },
    {"./",  "a/",    "a"          },
    {"./",  "a/.",   "a"          },
    {"./",  "a/..",  "."          },
    {"./",  "a/b",   "a/b"        },
    {"./.", ".",     "."          },
    {"./.", "..",    ".."         },
    {"./.", "a",     "a"          },
    {"./.", "./",    "."          },
    {"./.", "./.",   "."          },
    {"./.", "./..",  ".."         },
    {"./.", "./a",   "a"          },
    {"./.", "../",   ".."         },
    {"./.", "../.",  ".."         },
    {"./.", "../..", "../.."      },
    {"./.", "../a",  "../a"       },
    {"./.", "a/",    "a"          },
    {"./.", "a/.",   "a"          },
    {"./.", "a/..",  "."          },
    {"./.", "a/b",   "a/b"        },
    {"./a", ".",     ".."         },
    {"./a", "..",    "../.."      },
    {"./a", "a",     "."          },
    {"./a", "./",    ".."         },
    {"./a", "./.",   ".."         },
    {"./a", "./..",  "../.."      },
    {"./a", "./a",   "."          },
    {"./a", "../",   "../.."      },
    {"./a", "../.",  "../.."      },
    {"./a", "../..", "../../.."   },
    {"./a", "../a",  "../../a"    },
    {"./a", "a/",    "."          },
    {"./a", "a/.",   "."          },
    {"./a", "a/..",  ".."         },
    {"./a", "a/b",   "b"          },
    {"a/",  ".",     ".."         },
    {"a/",  "..",    "../.."      },
    {"a/",  "a",     "."          },
    {"a/",  "./",    ".."         },
    {"a/",  "./.",   ".."         },
    {"a/",  "./..",  "../.."      },
    {"a/",  "./a",   "."          },
    {"a/",  "../",   "../.."      },
    {"a/",  "../.",  "../.."      },
    {"a/",  "../..", "../../.."   },
    {"a/",  "../a",  "../../a"    },
    {"a/",  "a/",    "."          },
    {"a/",  "a/.",   "."          },
    {"a/",  "a/..",  ".."         },
    {"a/",  "a/b",   "b"          },
    {"a/.", ".",     ".."         },
    {"a/.", "..",    "../.."      },
    {"a/.", "a",     "."          },
    {"a/.", "./",    ".."         },
    {"a/.", "./.",   ".."         },
    {"a/.", "./..",  "../.."      },
    {"a/.", "./a",   "."          },
    {"a/.", "../",   "../.."      },
    {"a/.", "../.",  "../.."      },
    {"a/.", "../..", "../../.."   },
    {"a/.", "../a",  "../../a"    },
    {"a/.", "a/",    "."          },
    {"a/.", "a/.",   "."          },
    {"a/.", "a/..",  ".."         },
    {"a/.", "a/b",   "b"          },
    {"a/b", ".",     "../.."      },
    {"a/b", "..",    "../../.."   },
    {"a/b", "a",     ".."         },
    {"a/b", "./",    "../.."      },
    {"a/b", "./.",   "../.."      },
    {"a/b", "./..",  "../../.."   },
    {"a/b", "./a",   ".."         },
    {"a/b", "../",   "../../.."   },
    {"a/b", "../.",  "../../.."   },
    {"a/b", "../..", "../../../.."},
    {"a/b", "../a",  "../../../a" },
    {"a/b", "a/",    ".."         },
    {"a/b", "a/.",   ".."         },
    {"a/b", "a/..",  "../.."      },
    {"a/b", "a/b",   "."          },
};

#endif
